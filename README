	# TestsHardCode



Тесты сделаны для проверки работоспособности сайта http://91.210.171.73:8080/api/docs/


Тесты разбиты на разделы с Категорями(category), с животными(Pets), токенами(tokens)

Тесты призваны автоматически тестировать REST API, с помощью команд GET, POST, PUT, DELETE
Необходимо запускать тесты последовательно от первого к последнему.
В тестах предусмотрено позитивное тестирование, проведение всех тестов успешно, также тесты показывают, когда тест провалился с соответстующей информацией и кодом ошибки.

В Категориях доступны следующие тесты:
  # 1 перечисляет все категории, которые доступны, используется метод GET выгружается в формате json файла
  get_status_of_categories()
  # 2 Создание новой категории при помощи метода POST, при уже присутствующем названии категории выведет ошибку и уведомит, что данная категория уже существует
  create_new_category()
  # 3 Выгрузка категории по id, используются два варианта теста: позитивный и негативный, при введении существующего id выгружается категория с именем, 
  при неверном значении id выводится соответствующая информация, что данной категории нет
  get_status_of_category_by_id()
  # 4 Изменение названия существующей категории при помощи метода PUT. Предусмотрено позитивный и негативный тест, с выводом информации об успешном выполнении,
  либо при невозможности изменить название категории, если указанного id нет
  put_category_by_id()
  # 5 Удаление созданной категории по id, прозитивный и негативный тест, при существовании номера категории успешно удаляет категорию, при отсутствии пишет, что категория удалена, либо не существует.
  delete_category_by_id()


В Pets доступны следующие тесты:
  # 1 перечисляет всех Петов, которые доступны, используется метод GET выгружается в формате json файла
  get_status_of_pets()
  # 2 Создание нового Пета при помощи метода POST, при уже присутствующем названии Пета выведет ошибку и уведомит, что данный Пет уже существует
  create_new_pet()
  # 3 Выгрузка Пета по id, используются два варианта теста: позитивный и негативный, при введении существующего id выгружается Пет со всеми данными 
  при неверном значении id выводится соответствующая информация, что данного Пета нет
  get_status_of_pets_by_id()
  # 4 Изменение названия существующего Пета при помощи метода PUT. Предусмотрено позитивный и негативный тест, с выводом информации об успешном выполнении,
  либо при невозможности изменить название категории, если указанного id нет
  put_pet_by_id()
  # 5 Удаление созданного Пета по id, при помощи метода DELETE прозитивный и негативный тест, при существовании номера пета успешно удаляет категорию, при отсутствии пишет, что пет удален, либо не существует.
  delete_pet_by_id()

    # Functions

Список доступных функций Categories.py:
    get_status_of_categories()
	create_new_category()
	get_status_of_category_by_id()
	put_category_by_id()
	delete_category_by_id()


Функции Pets.py
	get_status_of_pets()
	create_new_pet()
	get_status_of_pets_by_id()
	put_pet_by_id()
	delete_pet_by_id()


В дополнение везде реализована функция jprint(obj), для вывода json файла в столбец

Также реализлван файл с добавлением токена tokenpet.py

В файле settings внесены данные по умолчанию для тестирования, которые можно менять

Выозв функций используется путем стандартного вызова в IDE для автотестирования


Установка путем добавления ссылке в IDE, к примеру PYCHARM
https://github.com/XxXDeathmatchXxX/TestsHardCode.git

 





